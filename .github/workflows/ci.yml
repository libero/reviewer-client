name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
env:
  IMAGE_TAG: ${{ github.sha }}
jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: '12.15'
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-
      - name: Lint
        run: make lint
      - name: Unit Test
        run: make test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: libero
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: libero/reviewer-client/reviewer-client
          image_tag: ${{ github.sha }}
          registry: docker.pkg.github.com
          build_extra_args: "--build-arg=image_tag=${IMAGE_TAG}"

  saucelabs-tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ["saucelabs:Firefox@latest:Windows 10", "saucelabs:MicrosoftEdge@latest:Windows 10", "saucelabs:Safari@13:macOS 10.13"]
    # Only run if on master or if '[run-saucelabs]' is part of PR message
    if: >
      contains(github.event.pull_request.body, '[run-saucelabs]')
      || github.ref == 'refs/heads/master'
    env:
      SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
      SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
      SAUCE_JOB: "reviewer-client"
      SAUCE_BUILD: "libero-reviewer--${{ github.ref }}-${{ github.event.pull_request.head.sha }}"
      SAUCE_API_HOST: "eu-central-1.saucelabs.com"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-node@v1
        with:
          node-version: '12.15'
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-client-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-client-
      - name: Setup client with mocks
        run: |
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker pull docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG}
          docker tag docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG} libero/reviewer-client:${IMAGE_TAG}
          yarn
          make setup
          make start_ci_localhost
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
<<<<<<< HEAD
      - run: find ./tests -name *.browser.ts -type f | sort | xargs -I % sh -c "yarn testcafe --sf -e -u --disable-http2 ${{ matrix.node }} % -q || exit 255"
      - run: find ./tests -name *.browser.ts -type f | sort | xargs -I % sh -c "yarn testcafe --sf -e -u --disable-http2 ${{ matrix.node }} % -q || exit 255"
      - run: find ./tests -name *.browser.ts -type f | sort | xargs -I % sh -c "yarn testcafe --sf -e -u --disable-http2 ${{ matrix.node }} % -q || exit 255"
=======
      - run: yarn testcafe --sf --skip-js-errors -c 1 '${{ matrix.browser }}' 'tests/**/*.browser.ts' --browser-init-timeout 1800000
>>>>>>> 76c1df9 (fix: add a limit to not run tests concurrently)
      - name: Dump logs on failure
        if: failure()
        run: |
          docker-compose -f docker-compose.ci.yml -f docker-compose.ci.localhost.yml logs
      - name: Notify slack on failure
        if: failure() && github.ref == 'refs/heads/master'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: libero-reviewer-tech
          status: FAILED
          color: danger

  browsertest-container:
    needs: [test, build]
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup client with mocks
        run: |
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker pull docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG}
          docker tag docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG} libero/reviewer-client:${IMAGE_TAG}
          make setup
          make start_ci
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - run: make build_browsertest
      - run: make test_browser_containerized

  browsertest-and-push-images:
    needs: [test, build, saucelabs-tests]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup client with mocks
        run: |
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          docker pull docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG}
          docker tag docker.pkg.github.com/libero/reviewer-client/reviewer-client:${IMAGE_TAG} libero/reviewer-client:${IMAGE_TAG}
          make setup
          make start_ci
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - run: make build_browsertest
      - run: make test_browser_containerized
      - name: Push images to docker hub
        run: |
          .scripts/github/retag-and-push.sh reviewer-client $IMAGE_TAG
          .scripts/github/retag-and-push.sh reviewer-browsertests $IMAGE_TAG
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Notify slack on failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: libero-reviewer-tech
          status: FAILED
          color: danger
